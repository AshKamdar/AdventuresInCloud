AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Implementing REST API for book catalog

Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 60

Resources:
  BooksCatalogApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: book-catalog-api
      StageName: dev
      DefinitionBody:
          Fn::Transform:
            Name: AWS::Include
            Parameters:
              Location: swagger.yaml

  GetAllBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: book-catalog-getAllBooks
      CodeUri: src/
      Handler: index.getAllBooks
      Policies:
        DynamoDBReadPolicy:
          TableName:
            Ref: BooksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BooksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: BooksCatalogApi
            Path: /
            Method: GET

  AddBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: book-catalog-addBook
      CodeUri: src/
      Handler: index.addBook
      Policies:
        DynamoDBCrudPolicy:
          TableName:
            Ref: BooksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BooksTable
      Events:
        Post:
          Type: Api
          Properties:
            RestApiId:
              Ref: BooksCatalogApi
            Path: /
            Method: POST

  GetBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: book-catalog-getBook
      CodeUri: src/
      Handler: index.getBook
      Policies:
        DynamoDBReadPolicy:
          TableName:
            Ref: BooksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BooksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: BooksCatalogApi
            Path: /{id}
            Method: GET

  UpdateBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: book-catalog-updateBook
      CodeUri: src/
      Handler: index.updateBook
      Policies:
        DynamoDBCrudPolicy:
          TableName:
            Ref: BooksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BooksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: BooksCatalogApi
            Path: /{id}
            Method: PUT

  DeleteBookFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: book-catalog-deleteBook
      CodeUri: src/
      Handler: index.deleteBook
      Policies:
        DynamoDBCrudPolicy:
          TableName:
            Ref: BooksTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: BooksTable
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: BooksCatalogApi
            Path: /{id}
            Method: DELETE

  BooksTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: books-catalog
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
